//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModelValidator.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Error {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Error() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ModelValidator.Resources.Error", typeof(Error).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not all elements of the {0} collection match the input condition..
        /// </summary>
        internal static string All {
            get {
                return ResourceManager.GetString("All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No element of the collection {0} matches the incoming condition..
        /// </summary>
        internal static string Any {
            get {
                return ResourceManager.GetString("Any", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Credit card number is invalid..
        /// </summary>
        internal static string CardInvalid {
            get {
                return ResourceManager.GetString("CardInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Credit card number must be between 13 and 19 digits..
        /// </summary>
        internal static string CardMustBeBetween {
            get {
                return ResourceManager.GetString("CardMustBeBetween", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Credit card number must contain only digits..
        /// </summary>
        internal static string CardMustContainDigits {
            get {
                return ResourceManager.GetString("CardMustContainDigits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The condition for {0} is not met..
        /// </summary>
        internal static string ConditionError {
            get {
                return ResourceManager.GetString("ConditionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The property {0} does not contain the element {1}..
        /// </summary>
        internal static string Contains {
            get {
                return ResourceManager.GetString("Contains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The property {0} has less value than the argument: {1}..
        /// </summary>
        internal static string DateAfter {
            get {
                return ResourceManager.GetString("DateAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The {0} property has the greater value than the argument: {1}..
        /// </summary>
        internal static string DateBefore {
            get {
                return ResourceManager.GetString("DateBefore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The property {0} is out of range: ({1} - {2})..
        /// </summary>
        internal static string DateOutOfRange {
            get {
                return ResourceManager.GetString("DateOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The property {0} is not an email address or contains errors..
        /// </summary>
        internal static string EmailAddress {
            get {
                return ResourceManager.GetString("EmailAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Array property {0} is empty..
        /// </summary>
        internal static string EmptyArrayProperty {
            get {
                return ResourceManager.GetString("EmptyArrayProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Collection property {0} is empty..
        /// </summary>
        internal static string EmptyCollectionProperty {
            get {
                return ResourceManager.GetString("EmptyCollectionProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на List property {0} is empty..
        /// </summary>
        internal static string EmptyListProperty {
            get {
                return ResourceManager.GetString("EmptyListProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на String property {0} is empty..
        /// </summary>
        internal static string EmptyStringProperty {
            get {
                return ResourceManager.GetString("EmptyStringProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The {0} property must end with &quot;{1}&quot;..
        /// </summary>
        internal static string EndsWith {
            get {
                return ResourceManager.GetString("EndsWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The property {0} is not equal to the passed value {1}..
        /// </summary>
        internal static string EqualTo {
            get {
                return ResourceManager.GetString("EqualTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The {0} ranges from {1} to {2}..
        /// </summary>
        internal static string ExclusiveBetween {
            get {
                return ResourceManager.GetString("ExclusiveBetween", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The passed value {0} is not greater than {1}..
        /// </summary>
        internal static string GreaterThan {
            get {
                return ResourceManager.GetString("GreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The passed value {0} is not greater than or equal to {1}..
        /// </summary>
        internal static string GreaterThanOrEqualTo {
            get {
                return ResourceManager.GetString("GreaterThanOrEqualTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The property {0} is not contained in the passed enumeration..
        /// </summary>
        internal static string In {
            get {
                return ResourceManager.GetString("In", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The {0} is not in the range between {1} and {2}..
        /// </summary>
        internal static string InclusiveBetween {
            get {
                return ResourceManager.GetString("InclusiveBetween", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The {0} length is not equal to {1}..
        /// </summary>
        internal static string Length {
            get {
                return ResourceManager.GetString("Length", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The length cannot be less than zero..
        /// </summary>
        internal static string LengthError {
            get {
                return ResourceManager.GetString("LengthError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The passed value {0} is not less than {1}..
        /// </summary>
        internal static string LessThan {
            get {
                return ResourceManager.GetString("LessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The passed value {0} is not less than or equal to {1}..
        /// </summary>
        internal static string LessThanOrEqualTo {
            get {
                return ResourceManager.GetString("LessThanOrEqualTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на String {0} does not match regular expression {1}..
        /// </summary>
        internal static string Matches {
            get {
                return ResourceManager.GetString("Matches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The maximum length of the {0} must be {1}..
        /// </summary>
        internal static string MaxLength {
            get {
                return ResourceManager.GetString("MaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The minimum length of the {0} field must be {1}..
        /// </summary>
        internal static string MinLength {
            get {
                return ResourceManager.GetString("MinLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The property {0} is not a date..
        /// </summary>
        internal static string NotDate {
            get {
                return ResourceManager.GetString("NotDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The property {0} equals to the passed value {1}..
        /// </summary>
        internal static string NotEqualTo {
            get {
                return ResourceManager.GetString("NotEqualTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The {0} property is contained in the passed enumeration..
        /// </summary>
        internal static string NotIn {
            get {
                return ResourceManager.GetString("NotIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The property {0} is negative..
        /// </summary>
        internal static string NotNegative {
            get {
                return ResourceManager.GetString("NotNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The property {0} is positive..
        /// </summary>
        internal static string NotPositive {
            get {
                return ResourceManager.GetString("NotPositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The property {0} is not a string..
        /// </summary>
        internal static string NotString {
            get {
                return ResourceManager.GetString("NotString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The argument {0} is null..
        /// </summary>
        internal static string NullArgument {
            get {
                return ResourceManager.GetString("NullArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The property {0} is null..
        /// </summary>
        internal static string NullProperty {
            get {
                return ResourceManager.GetString("NullProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to read property name {0}..
        /// </summary>
        internal static string PropertyNameError {
            get {
                return ResourceManager.GetString("PropertyNameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The {0} property must start with &quot;{1}&quot;..
        /// </summary>
        internal static string StartsWith {
            get {
                return ResourceManager.GetString("StartsWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The elements of the {0} collection are not unique..
        /// </summary>
        internal static string Unique {
            get {
                return ResourceManager.GetString("Unique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type {0} is unsupported..
        /// </summary>
        internal static string UnsupportedType {
            get {
                return ResourceManager.GetString("UnsupportedType", resourceCulture);
            }
        }
    }
}
